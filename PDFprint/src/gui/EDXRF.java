/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Cary60_1
 */
public class EDXRF extends javax.swing.JFrame implements Runnable {
    private int hour,minutes,seconds;
    private JFileChooser j;
    private List <String> tempList;

    /**
     * Creates new form EDXRF
     */
    public EDXRF() {
        initComponents();
        currentDate();
        Thread t= new Thread(this);
        t.start();
        j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        textArea.setText("Vă rugăm selectaţi Fişierele...");
    }

    public Optional<String> getExtensionByStringHandling(String filename) {
    return Optional.ofNullable(filename)
      .filter(f -> f.contains("."))
      .map(f -> f.substring(filename.lastIndexOf(".") + 1));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        uploadBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        radioText = new javax.swing.JRadioButton();
        radioXPS = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        openFileBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        dateTxt = new javax.swing.JMenu();
        timeTxt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "PDF Generator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(0, 102, 204))); // NOI18N

        uploadBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uploadBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/upload.png"))); // NOI18N
        uploadBtn.setText("Încarcă Fişierele...");
        uploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        updateBtn.setText("Generează Raportul PDF");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(uploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadBtn)
                    .addComponent(updateBtn))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Încarcă Fișierele");

        radioText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioText.setForeground(new java.awt.Color(51, 51, 255));
        radioText.setSelected(true);
        radioText.setText("Fișiere Text");
        radioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTextActionPerformed(evt);
            }
        });

        radioXPS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioXPS.setForeground(new java.awt.Color(51, 51, 255));
        radioXPS.setText("Fișiere XPS");
        radioXPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioXPSActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Alege Tipul Fișierelor");

        openFileBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        openFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mouse.png"))); // NOI18N
        openFileBtn.setText("Alege Fişiererele....");
        openFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(openFileBtn)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(radioText)
                                .addGap(109, 109, 109)
                                .addComponent(radioXPS)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioText)
                    .addComponent(radioXPS))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(openFileBtn)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        dateTxt.setForeground(new java.awt.Color(153, 0, 153));
        dateTxt.setText("Data");
        dateTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(dateTxt);

        timeTxt.setForeground(new java.awt.Color(153, 0, 153));
        timeTxt.setText("Timpul");
        timeTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(timeTxt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Nimic");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBtnActionPerformed

    private void uploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnActionPerformed
        // TODO add your handling code here:
       try{
        for(String str:tempList){
            File file = new File(str);
            BufferedReader brTest = null;
            try {
                brTest = new BufferedReader(new FileReader(file));
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
            String text="";
            try {
                text = brTest.readLine();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
            if(text.equals("Analysis report")){
                System.out.println("Firstline is : " + text);
            }else{
                String [] s = str.split(Pattern.quote("\\"));
             JOptionPane.showMessageDialog(null,"Fişierul \""+s[s.length-1]+" \" nu este de tip EDXRF.Acesta nu va fi inclus în Baza de Date.");

            }
        }
       }catch(NullPointerException ex){
           JOptionPane.showMessageDialog(null,"Nu aţi selectat nici un fişier pentru a fi încărcat sau Fişierele selectate sunt goale. Alegeţi iniţial un Fişier sau mai multe"
                   + " apăsând butonul de mai sus \"Alege Fişierele...\".");
       }
       tempList=null;
       textArea.setText("Actualizaţi datele. Apăsaţi butonul \"Actualizare Date...\"");     
    }//GEN-LAST:event_uploadBtnActionPerformed

    private void radioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTextActionPerformed
        // TODO add your handling code here:
        if(radioText.isSelected()){
            radioXPS.setSelected(false);
        }
    }//GEN-LAST:event_radioTextActionPerformed

    private void radioXPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioXPSActionPerformed
        // TODO add your handling code here:
         if(radioXPS.isSelected()){
            radioText.setSelected(false);
        }
    }//GEN-LAST:event_radioXPSActionPerformed

    private void openFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileBtnActionPerformed
        if(radioText.isSelected()){   
            openText();
        }
        else{
        
        }
 

    }//GEN-LAST:event_openFileBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             /*   if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                  UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
              
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EDXRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EDXRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EDXRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EDXRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EDXRF().setVisible(true);
            }
        });
    }

    public void openText(){      
        String location = gui.AppPrefs.FileLocation.get(System.getProperty("user.home"));
        j.setCurrentDirectory(new File(location));
        // allow multiple file selection
        j.setMultiSelectionEnabled(true);
        j.removeChoosableFileFilter(j.getAcceptAllFileFilter());

        FileFilter restrict = new gui.OpenFileFilter("cantit");

        j.setFileFilter(restrict);

        // invoke the showsOpenDialog function to show the save dialog
        int r = j.showOpenDialog(null);

        if (r == JFileChooser.APPROVE_OPTION) {
            // get the selelcted files
            tempList = new ArrayList <String>();
            File files[] = j.getSelectedFiles();
            String[] names = new String[files.length];
            for (int i = 0; i < files.length; i++) {
                gui.AppPrefs.FileLocation.put(files[i].getParentFile().getAbsolutePath());
                /// JOptionPane.showMessageDialog(null,getExtensionByStringHandling(files[i].getName()));
                if(files[i].getName().contains("cantit") && getExtensionByStringHandling(files[i].getName()).equals(Optional.empty())){
                    names[i] = files[i].getParentFile().getAbsolutePath()+"\\"+files[i].getName();
                }else{
                    textArea.setText("format gresit"+files[i].getName());
                }
            }

            Arrays.sort(names,new gui.FilenameComparator());
            tempList.addAll(Arrays.asList(names));

            // set text to blank
            textArea.setText("Fişierul(erele) selectate:\n\n");

            // set the label to the path of the selected files
            for(int t=0;t<names.length;t++){
                String [] s = names[t].split(Pattern.quote("\\"));
                    textArea.setText(textArea.getText() + "" + s[s.length-1]+"\n");
                }
            }
            else{
                textArea.setText("nu a fost selectat nici un fişier");
            }
    
    
    }
    
    public void openXPS(){


    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu dateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton openFileBtn;
    private javax.swing.JRadioButton radioText;
    private javax.swing.JRadioButton radioXPS;
    private javax.swing.JTextArea textArea;
    private javax.swing.JMenu timeTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton uploadBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
         while(true){
             Calendar cal = new GregorianCalendar();
            seconds = cal.get(Calendar.SECOND);
            minutes =  cal.get(Calendar.MINUTE);
            hour = cal.get(Calendar.HOUR);
      
        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
        Date date = cal.getTime();
        String time= dateFormat.format(date);
        timeTxt.setText(" Ora: "+time);
             try {
                 Thread.sleep(100);
             } catch (InterruptedException ex) {
                 Logger.getLogger(EDXRF.class.getName()).log(Level.SEVERE, null, ex);
             }
       }
    }
    
     public void currentDate(){
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year =  cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        dateTxt.setText(String.format("Data : %02d/%02d/%04d",day,(month+1),year));
        
          
    }
}
